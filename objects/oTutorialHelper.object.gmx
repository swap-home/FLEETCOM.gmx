<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tutorial_step = -1;

/*
-1 - Briefing
0 - Select ship to check status
1 - Move screen for visual confirmation
2 - Move ship into range
3 - Launch fighters to intercept 
4 - Launch transports to retake station
5 - Launch more transports at the same time
6 - Mission End screen
7 - Room Transition
8 - Move to refit station to upgrade
9 - Purchase a module for Seven Seas
10 - Purchase another Ship
11 - Move ships into deploy area, explain fleet strength
12 - launch mission from mission controller
*/

fighters_to_spawn = 5;
fighters_spawn_delay = 30;

station_boarded = false;
stationid = noone;
shipid = noone;

// Setup Tutorial mission
if (room == Tutorial) {
    var tutorial_string = "At 1400 hours, March 14, contact was lost with a remote station" +
        " in the system Theta Tauri. " +
        "##UNSC Seven Seas was dispatched to the area by local FLEETCOM." +
        "##Your first field mission is to retake the station." +
        "###Insurrectionist activity is suspected in the system.";
    textbox_show(tutorial_string, 100, 120, 800, 400);
    
    stationid = instance_create(1280, 320, oUNSC_station);
    with (stationid) {
        side = NEUTRAL;
        pdt = 2;
        broadsword_max = 0;
        longsword_max = 0;
        pelican_max = 0;
        ship_name = "Remote Station";
        unselectable = true;
        boarding_captures = true;
    }
    
    with (oscroll) {
        screen_locked = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(MissionMenu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid = id;

if (fighters_to_spawn &gt; 0) {
    fighters_to_spawn--;
    with (oUNSC_station) {
        with (instance_create(x,y,oUNSC_longsword_GATL1)) {
            side = REBEL;
            parentid = selfid.stationid;
            commandFighters(selfid.stationid, parentid.x, parentid.y, noone);
        }
    }
}

alarm[1] = fighters_spawn_delay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid = id;

shipid = instance_create(192,320, oUNSC_frigate_charonL);
with (shipid) {
    direction = 0;
    side = UNSC;
    ship_name = "UNSC Seven Seas";
    
    createShipWarpTrail(id, 5, 0.5, 0.5);
}
global.save_manager.ship_id[| 0] = shipid;

with (oscroll) {
    screen_locked = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid = id;

if (shipid == noone) {
    shipid = instance_find(oUNSC_frigate_charonL, 0);
}

if (global.ui_controller.text_string == "" &amp;&amp; tutorial_step == -1) {
    tutorial_step = 0;
    alarm[0] = 45;
}

if (global.ui_controller.text_string == "" &amp;&amp; tutorial_step == 6) {
    tutorial_step = 7;
    alarm[2] = 5;
}

if (tutorial_step == 9) {
    if (!ds_list_empty(global.selection_manager.selection)
        &amp;&amp; instance_exists(global.selection_manager.selection[| 0])
        &amp;&amp; global.selection_manager.selection[| 0].object_index == oRefitStation) {
    
        global.ui_controller.button_required = 0;
    } else {
        global.ui_controller.button_required = -1;    
    }
}

with (shipid) {
    if (hull &lt; hull_max/10) {hull = hull_max/10;}
    if (pelican == 0) {pelican = pelican_max;}
    if (selfid.tutorial_step &lt; 1 &amp;&amp; selected) {
        selfid.tutorial_step = 1;
    }
    if (selfid.tutorial_step &lt; 3 &amp;&amp; x &gt;= 360) {
        selfid.tutorial_step = 3;
        selfid.stationid.side = REBEL;
        selfid.stationid.invulnerable = true;
        selfid.alarm[1] = selfid.fighters_spawn_delay;
        global.ui_controller.button_required = 0;
    }
    
    if (selfid.tutorial_step &lt; 10 &amp;&amp; (ship_modules &amp; MODULE_MAC)) {
        selfid.tutorial_step = 10;
        global.ui_controller.button_required = -1;
    }
}

if (tutorial_step &lt; 2 &amp;&amp; view_xview[PRIMARY_VIEW] &gt;= 360) {
    tutorial_step = 2;
}

var rebel_fighter_count = 0;
with (oUNSC_longsword_GATL1) {
    if (side == REBEL) {
        rebel_fighter_count++;
    }
}
if (tutorial_step &lt; 4 &amp;&amp; fighters_to_spawn == 0 &amp;&amp; rebel_fighter_count == 0) {
    tutorial_step = 4;
    global.ui_controller.button_required = 1;
}

with (stationid) {
    if (selfid.tutorial_step &lt; 6 &amp;&amp; side == UNSC) {
        mission_end(15,true);
        selfid.tutorial_step = 6;
        global.ui_controller.button_required = -1;
    }
    
    if (!selfid.station_boarded) {
        if (boarding_level &gt; 0) {
            selfid.station_boarded = true;
        }
    } else {
        if (selfid.tutorial_step &lt; 5 &amp;&amp; boarding_level == 0) {
            selfid.tutorial_step = 5;
        }
    }
}

if (tutorial_step == 8) {
    var ctrlid = instance_find(oGameMenucontroller, 0);
    // Starting ship is the ship being upgraded
    if (instance_exists(ctrlid) &amp;&amp; instance_exists(ctrlid.refitid) 
        &amp;&amp; instance_exists(ctrlid.refitid.upgradeid) 
        &amp;&amp; ctrlid.refitid.upgradeid == global.save_manager.ship_id[| 0]) {
            tutorial_step = 9;
    }
}

if (tutorial_step == 10 &amp;&amp; (instance_exists(oUNSC_corvette_fast) || instance_exists(oUNSC_corvette_repair))) {
    tutorial_step = 11;
}

if (tutorial_step == 11) {
    var ctrlid = instance_find(oGameMenucontroller, 0);
    // Both ships are in the deploy zone
    if (instance_exists(ctrlid) &amp;&amp; shipid.x &gt; room_width - ctrlid.warp_zone + ctrlid.warp_zone_border) {
        var corvetteid = noone;
        corvetteid = instance_find(oUNSC_corvette_fast,0);
        if (corvetteid == noone) {
            corvetteid = instance_find(oUNSC_corvette_repair,0);
        }
        if (corvetteid.x &gt; room_width - ctrlid.warp_zone + ctrlid.warp_zone_border) {
            tutorial_step = 12;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (tutorial_step == 7) {
    tutorial_step = 8;
    shipid = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw in-screen tips

draw_set_font(Halo);
draw_set_color(c_white);
draw_set_halign(fa_center);

switch (tutorial_step) {
    case -1:
        break;
    case 0:
        draw_text_ext(400, 500, "To select a unit, left click on it" +
            "#Select UNSC Seven Seas by left clicking on it", 32, 600);
        break;
    case 1:
        draw_text_ext(592, 500, "To move your screen, use the arrow keys" +
            "#or mouse over the edge of the screen" +
            "#Try moving the screen to the right to bring the Station into view", 32, 600);
        break;
    case 2:
        draw_text_ext(836, 500, "Order UNSC Seven Seas to approach the Station by right clicking" +
            "#With UNSC Seven Seas selected, right click near the Station to move to it", 32, 600);
        break;
    case 3:
        draw_text_ext(836, 500, "Launch UNSC Seven Seas' own fighter complement to intercept" +
            "#with the Q key, or by clicking the Launch Fighter button in the bottom left" +
            "#and selecting a location or target for the fighters", 32, 600);
        break;
    case 4:
        draw_text_ext(1036, 500, "With the fighters out of the way, board the Station" +
            "#with the W key, or by clicking the Launch Transports button in the bottom left" +
            "#and selecting the Station as the target", 32, 600);
        break;
    case 5: 
        draw_text_ext(1036, 500, "The number on the left of the boarding bar indicates its" +
            "#security level, which you will have to overcome with transports" +
            "#try launching multiple transports within a short timeframe", 32, 600);
        break;
    case 8:
        draw_text_ext(768, 500, "Between missions, you will build and refit ships." +
            "#Bring UNSC Seven Seas towards the refit station " +
            "the cyan radius will turn into a line, indicating the current unit to upgrade", 32, 600);
        break;
    case 9:
        draw_text_ext(768, 500, "Upgrade your starting Charon Frigate with a MAC " +
            "by selecting the refit station and clicking on the MAC module, this will use up credits shown on the top left " +
            "as well as take up a module slot, which are earned with XP", 32, 600);
        break;
    case 10:
        draw_text_ext(384, 500, "With the remaining 5 Credits, build a Corvette from the Shipyard", 32, 600);
        break;
    case 11:
        draw_text_ext(1152, 500, "The maximum fleet strength for the next mission is 5." + 
        "#Since the total fleet strength of your Corvette and upgraded Frigate meet this, send both of them into the yellow deploy zone", 32, 600);
        break;
    case 12:
        draw_text_ext(1152, 500, "To start the mission, select the Mission Control Station and press Start Mission##This concludes the tutorial", 32, 600);
        break;
    case 13:
        draw_text_ext(1152, 500, "This is a randomized large scale battle, displaying how later missions could possibly play out##A toggles AI for the left side#D toggles debug info#F toggles effects", 32, 600);
        break;      
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
