<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oallsingleships</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

race = "unsc";

autocannon = 0;
autocannon_cooldown = 0;
autocannon_cooldown_max = 15;
autocannon_range = 450;
autocannon_ammo = 0;
autocannon_ammo_max = 0;

asgm = 0;
asgm_cooldown = 0;
asgm_cooldown_max = 150;
asgm_range = 500;
asgm_per_shot = 1;
asgm_ammo = 0;
asgm_ammo_max = 0;

bombcharge = 0;
bombcharge_cooldown = 0;
bombcharge_cooldown_max = 60;
bombcharge_range = 50;
bombcharge_ammo = 0;
bombcharge_ammo_max = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(targetid))
{
    if (targetid.side != side &amp;&amp; targetid.side != NEUTRAL &amp;&amp; !targetid.invulnerable &amp;&amp; !targetid.invisible)
    {
        var targetdir_l = point_direction(x,y,targetid.x,targetid.y);
        
        if (((withinDegrees(direction, targetdir_l, 15) &amp;&amp; distance_to_object(targetid) &lt;= autocannon_range)
            || collision_line(x,y,x+lengthdir_x(autocannon_range,direction),y+lengthdir_y(autocannon_range,direction),targetid,false,true))
            &amp;&amp; autocannon_cooldown &lt;= 0 
            &amp;&amp; autocannon_ammo &gt; 0)
        {
            autocannon_cooldown = autocannon_cooldown_max;
            
            for (var i = 0; i &lt; autocannon; i+=1)
            {
                if (autocannon_ammo != 0) {
                    autocannon_ammo--;
                    createChild(x,y,oUNSC_120mm, targetdir_l);
                }
            }
        }

        if (((withinDegrees(direction, targetdir_l, 30) &amp;&amp; distance_to_object(targetid) &lt;= asgm_range)
            || collision_line(x,y,x+lengthdir_x(asgm_range,direction),y+lengthdir_y(asgm_range,direction),targetid,false,true))
            &amp;&amp; asgm_cooldown &lt;= 0
            &amp;&amp; asgm_ammo &gt; 0)
        {
            asgm_cooldown = asgm_cooldown_max;
            var missiles_fired = asgm/asgm_per_shot;
            for (var i = 0; i &lt; missiles_fired; i+=1)
            {
                if (asgm_ammo != 0) {
                    asgm_ammo--;
                    var missile = createChild(x,y,oUNSC_ASGM10, targetdir_l);
                    missile.targetid = targetid;
                }
            }
        }
        
        if (((withinDegrees(direction, targetdir_l, 15) &amp;&amp; distance_to_object(targetid) &lt;= bombcharge_range)
            || collision_line(x,y,x+lengthdir_x(bombcharge_range,direction),y+lengthdir_y(bombcharge_range,direction),targetid,false,true))
            &amp;&amp; bombcharge_cooldown &lt;= 0
            &amp;&amp; bombcharge_ammo &gt; 0
            &amp;&amp; object_is_ancestor(targetid.object_index, oallcapitalships))
        {
            bombcharge_cooldown = bombcharge_cooldown_max;
            
            for (var i = 0; i &lt; bombcharge; i+=1)
            {   
                if (bombcharge_ammo != 0) {
                    bombcharge_ammo--;
                    createChild(x,y,oUNSC_bombcharge, targetdir_l);
                }
            }
        }
    }
}

if (autocannon_cooldown &gt; 0) {
    autocannon_cooldown -= 1;
}

if (asgm_cooldown &gt; 0) {
    asgm_cooldown -= 1;
}

if (bombcharge_cooldown &gt; 0) {
    bombcharge_cooldown -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
