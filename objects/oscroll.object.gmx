<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sUNSCicon</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_mx = 0;
view_vx = 0;
view_my = 0;
view_vy = 0;
viewdrag_visible = false;

scrollspeed = 16;
full_scroll_border = 32;
half_scroll_border = 64;
screen_locked = true;

zoom_mousewheel_increment = 0;
zoom_mousewheel_increment_max = 1;
zoom_multiplier_increment = 0.2;
zoom_multiplier = 1;
zoom_multiplier_min = 0.8;
zoom_multiplier_max = 2;

cursor_sprite = smouse;

x = (view_wview[PRIMARY_VIEW]-view_xview[PRIMARY_VIEW])/2;
y = (view_hview[PRIMARY_VIEW]-view_yview[PRIMARY_VIEW])/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!screen_locked) {

    if (mouse_x &lt; view_xview[PRIMARY_VIEW] + full_scroll_border) {
        screenLeft(scrollspeed);
    } else if (mouse_x &lt; view_xview[PRIMARY_VIEW] + half_scroll_border) {
        screenLeft(scrollspeed/2);
    }
    
    if (mouse_y &lt; view_yview[PRIMARY_VIEW] + full_scroll_border) {
        screenUp(scrollspeed);
    } else if (mouse_y &lt; view_yview[PRIMARY_VIEW] + half_scroll_border) {
        screenUp(scrollspeed/2);
    }
    
    if (mouse_x &gt; view_xview[PRIMARY_VIEW] + view_wview[PRIMARY_VIEW] - full_scroll_border) {
        screenRight(scrollspeed);
    } else if (mouse_x &gt; view_xview[PRIMARY_VIEW] + view_wview[PRIMARY_VIEW] - half_scroll_border) {
        screenRight(scrollspeed/2);
    }
    
    if (mouse_y &gt; view_yview[PRIMARY_VIEW] + view_hview[PRIMARY_VIEW] - full_scroll_border) {
        screenDown(scrollspeed);
    } else if (mouse_y &gt; view_yview[PRIMARY_VIEW] + view_hview[PRIMARY_VIEW] - half_scroll_border) {
        screenDown(scrollspeed/2);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!screen_locked) {
    screenDown(scrollspeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!screen_locked) {
    screenRight(scrollspeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!screen_locked) {
    screenUp(scrollspeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!screen_locked) {
    screenLeft(scrollspeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!screen_locked &amp;&amp; abs(++zoom_mousewheel_increment) &gt;= zoom_mousewheel_increment_max) {
    if (zoom_multiplier + zoom_multiplier_increment &gt;= zoom_multiplier_min
            &amp;&amp; SCREEN_WIDTH*(zoom_multiplier+zoom_multiplier_increment) &lt;= room_width
            &amp;&amp; SCREEN_HEIGHT*(zoom_multiplier+zoom_multiplier_increment) &lt;= room_height) {
        zoom_multiplier += zoom_multiplier_increment;
        resetCamera();
    }
    zoom_mousewheel_increment = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!screen_locked &amp;&amp; abs(--zoom_mousewheel_increment) &gt;= zoom_mousewheel_increment_max) {
    if (zoom_multiplier - zoom_multiplier_increment &gt;= zoom_multiplier_min) {
        zoom_multiplier -= zoom_multiplier_increment;
        resetCamera();
    }
    zoom_mousewheel_increment = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>viewdrag_visible = false;
//Cursor_Refresh()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!screen_locked) {
    view_mx = window_mouse_get_x();
    view_vx = view_xview[PRIMARY_VIEW];
    view_my = window_mouse_get_y();
    view_vy = view_yview[PRIMARY_VIEW];
    viewdrag_visible = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!screen_locked) {
    if (viewdrag_visible) {
        var difference_x = window_mouse_get_x() - view_mx;
        var difference_y = window_mouse_get_y() - view_my;
        x = (view_wview[PRIMARY_VIEW]/2) + view_vx - difference_x;
        y = (view_hview[PRIMARY_VIEW]/2) + view_vy - difference_y;
    }
    
    if (instance_exists(global.selection_manager)) { // TODO: investigate why this short circuit isn't working
        if (ds_list_empty(global.selection_manager.selection)) {
            viewdrag_visible = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zoom_multiplier = 1;
x = (view_wview[PRIMARY_VIEW]-view_xview[PRIMARY_VIEW])/2;
y = (view_hview[PRIMARY_VIEW]-view_yview[PRIMARY_VIEW])/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
