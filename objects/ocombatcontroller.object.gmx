<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.damageRatio[0,0] = 0.75;    //kinetic -&gt; titaniumA
global.damageRatio[0,1] = 0.75;    //kinetic -&gt; shield
global.damageRatio[0,2] = 1;       //kinetic -&gt; battleplating

global.damageRatio[1,0] = 1.5;     //explosive -&gt; titaniumA
global.damageRatio[1,1] = 0.25;    //explosive -&gt; shield
global.damageRatio[1,2] = 1.25;    //explosive -&gt; battleplating

global.damageRatio[2,0] = 1;       //thermal -&gt; titaniumA
global.damageRatio[2,1] = 1.5;     //thermal -&gt; shield
global.damageRatio[2,2] = 0.75;    //thermal -&gt; battleplating

global.damageRatio[3,0] = 1;       //boarding -&gt; titaniumA
global.damageRatio[3,1] = 1;       //boarding -&gt; shield
global.damageRatio[3,2] = 1;       //boarding -&gt; battleplating

global.UNSCfighters = ds_list_create();
ds_list_add(global.UNSCfighters, oUNSC_longsword_GATL1);
ds_list_add(global.UNSCfighters, oUNSC_broadsword_F41);

global.Covefighters = ds_list_create();
ds_list_add(global.Covefighters, oCove_banshee_T27XMF);
ds_list_add(global.Covefighters, oCove_seraph_T31XMF);

global.exp_reward = ds_map_create();
global.exp_reward[? oUNSC_longsword_GATL1] = 1;
global.exp_reward[? oUNSC_broadsword_F41] = 1;
global.exp_reward[? oCove_banshee_T27XMF] = 1;
global.exp_reward[? oCove_seraph_T31XMF] = 1;
global.exp_reward[? oUNSC_corvette_fast] = 5;
global.exp_reward[? oUNSC_corvette_repair] = 5;
global.exp_reward[? oUNSC_frigate_charonL] = 10;
global.exp_reward[? oUNSC_frigate_parisH] = 10;
global.exp_reward[? oUNSC_destroyer_diligence] = 15;
global.exp_reward[? oUNSC_destroyer_halberd] = 15;
global.exp_reward[? oUNSC_cruiser_marathonH] = 20;
global.exp_reward[? oUNSC_odp] = 20;
global.exp_reward[? oUNSC_station] = 20;
global.exp_reward[? oCove_corvette_SDVH] = 15;
global.exp_reward[? oCove_destroyer_CPV] = 20;
global.exp_reward[? oCove_cruiser_CRS] = 20;
global.exp_reward[? oCove_battlecruiser_CCS] = 30;
global.exp_reward[? oCove_assaultcarrier_CAS] = 150;

global.exp_level = ds_list_create();
global.exp_level[| 0] = 0;
global.exp_level[| 1] = 15;
global.exp_level[| 2] = 50;
global.exp_level[| 3] = 90;
global.exp_level[| 4] = 150;
global.exp_level[| 5] = 220;
global.exp_level[| 6] = 300;
global.exp_level[| 7] = 400;

global.hits = 0;
global.shots = 0;

if (room == RandomBattle)
{
    alarm[1] = 1;
    alarm[0] = irandom(30*30)+ 30*30;
}
else if (room == Tutorial)
{
    alarm[3] = 1;
}
else
{
    alarm[2] = 1;
}

leftside = 0.05*room_width;
leftmid = 0.35*room_width;
rightside = 0.95*room_width;
rightmid = 0.65*room_width;
leftdir = 180;
rightdir = 0;

ai = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.ui_controller.objective_string = "Retake Remote Station Alpha";

instance_create(0,0,oTutorialHelper);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ctrl = id;
with (oallships)
{
    if (x &lt;= room_width/2) 
    {
        side = UNSC;
        direction = ctrl.rightdir;
        moveTo(id, ctrl.leftmid, y);
    }
    else
    {
        side = REBEL;
        direction = ctrl.leftdir;
        moveTo(id, ctrl.rightmid, y);
        apply_ai(id, -1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ctrl = id;
with (oCovecapitalships)
{
    side = COVE;
    direction = ctrl.leftdir;
    moveTo(id, ctrl.rightmid, y);
    apply_ai(id, -1);
}
with (oCovesingleships)
{
    side = COVE;
    direction = ctrl.leftdir;
    moveTo(id, ctrl.rightmid, y);
    apply_ai(id, -1);
}
with (oUNSCcapitalships)
{
    side = UNSC;
    direction = ctrl.rightdir;
    moveTo(id, ctrl.leftmid, y);
}
with (oUNSCsingleships)
{
    side = UNSC;
    direction = ctrl.rightdir;
    moveTo(id, ctrl.leftmid, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var createId;

var ctrl = id;
var unscShipCount = 0;
var coveShipCount = 0;

with(oUNSCcapitalships){unscShipCount++;}
with(oCovecapitalships){coveShipCount++;}

if (coveShipCount*2 &lt; unscShipCount)
{
    if (irandom(1) == 0) 
    {
        createId = instance_create(ctrl.rightside,random_range(0.2*room_height, 0.8*room_height), oCove_corvette_SDVH);
        with (createId)
        {
            direction = ctrl.leftdir;
            moveTo(id, ctrl.leftmid, y);
            side = COVE;
            apply_ai(createId, -1);
        }
    }
    
    if (irandom(2) == 0) 
    {
        createId = instance_create(ctrl.rightside,random_range(0.2*room_height, 0.8*room_height), oCove_destroyer_CPV);
        with (createId)
        {
            direction = ctrl.leftdir;
            moveTo(id, ctrl.leftmid, y);
            side = COVE;
            apply_ai(createId, -1);
        }
    }
    
    if (irandom(5) == 0) 
    {
        createId = instance_create(ctrl.rightside,random_range(0.2*room_height, 0.8*room_height), oCove_cruiser_CRS);
        with (createId)
        {
            direction = ctrl.leftdir;
            moveTo(id, ctrl.leftmid, y);
            side = COVE;
            apply_ai(createId, -1);
        }
    }
    
    if (irandom(9) == 0) 
    {
        createId = instance_create(ctrl.rightside,random_range(0.2*room_height, 0.8*room_height), oCove_battlecruiser_CCS);
        with (createId)
        {
            direction = ctrl.leftdir;
            moveTo(id, ctrl.leftmid, y);
            side = COVE;
            apply_ai(createId, -1);
        }
    }
}

if (coveShipCount*3 &gt; unscShipCount)
{

    repeat (irandom(2)) {
        createId = instance_create(ctrl.leftside,random_range(0.2*room_height, 0.8*room_height), oUNSC_corvette_fast);
        with (createId)
        {
            moveTo(id, ctrl.rightmid, y);
            side = UNSC;
            if (ctrl.ai) {
                apply_ai(createId, -1);
            }
        }
    }
    
    repeat (irandom(2)) {
        createId = instance_create(ctrl.leftside,random_range(0.2*room_height, 0.8*room_height), oUNSC_corvette_repair);
        with (createId)
        {
            moveTo(id, ctrl.rightmid, y);
            side = UNSC;
            if (ctrl.ai) {
                apply_ai(createId, -1);
            }
        }
    }

    if (irandom(1) == 0) 
    {
        createId = instance_create(ctrl.leftside,random_range(0.2*room_height, 0.8*room_height), oUNSC_frigate_charonL);
        with (createId)
        {
            moveTo(id, ctrl.rightmid, y);
            side = UNSC;
            if (ctrl.ai) {
                apply_ai(createId, -1);
            }
        }
    }

    if (irandom(1) == 0) 
    {
        createId = instance_create(ctrl.leftside,random_range(0.2*room_height, 0.8*room_height), oUNSC_frigate_parisH);
        with (createId)
        {
            moveTo(id, ctrl.rightmid, y);
            side = UNSC;
            if (ctrl.ai) {
                apply_ai(createId, -1);
            }
        }
    }
    
    if (irandom(2) == 0) 
    {
        createId = instance_create(ctrl.leftside,random_range(0.2*room_height, 0.8*room_height), oUNSC_destroyer_diligence);
        with (createId)
        {
            moveTo(id, ctrl.rightmid, y);
            side = UNSC;
            if (ctrl.ai) {
                apply_ai(createId, -1);
            }
        }
    }
    
    if (irandom(2) == 0) 
    {
        createId = instance_create(ctrl.leftside,random_range(0.2*room_height, 0.8*room_height), oUNSC_destroyer_halberd);
        with (createId)
        {
            moveTo(id, ctrl.rightmid, y);
            side = UNSC;
            if (ctrl.ai) {
                apply_ai(createId, -1);
            }
        }
    }
    
    if (irandom(4) == 0) 
    {
        createId = instance_create(ctrl.leftside,random_range(0.2*room_height, 0.8*room_height), oUNSC_cruiser_marathonH);
        with (createId)
        {
            moveTo(id, ctrl.rightmid, y);
            side = UNSC;
            if (ctrl.ai) {
                apply_ai(createId, -1);
            }
        }
    }
}

alarm[0] = irandom(45*30)+ 30*30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message(string(global.hits) + "/" + string(global.shots) + " : " + string(global.hits/global.shots));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.debug) {
    var displayai;
    if (ai) {
        displayai = "AI: ON";
    } else {
        displayai = "AI: OFF";
    }
    draw_set_halign(fa_right);
    draw_set_color(c_gray);
    draw_text(view_xview[PRIMARY_VIEW] + view_wview[PRIMARY_VIEW] - 40, view_yview[PRIMARY_VIEW] + view_hview[PRIMARY_VIEW] - 80, displayai);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai = !ai;

if (!ai) {
    with (oUNSCcapitalships) {
        ai = false;
    }
} else {
    with (oUNSCcapitalships) {
       apply_ai(id, -1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
