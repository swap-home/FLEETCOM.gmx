<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oallcapitalships</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

race = "cove";

banshee = 0;
banshee_max = 0;
banshee_deploy_max = 6;
banshee_deploy_cd = 0;
banshee_deploy_cd_max = 30;
banshee_replenish_cd = 0;
banshee_replenish_cd_max = 210;

seraph = 0;
seraph_max = 0;
seraph_deploy_max = 4;
seraph_deploy_cd = 0;
seraph_deploy_cd_max = 60;
seraph_replenish_cd = 0;
seraph_replenish_cd_max = 210;

phantom = 0;
phantom_max = 0;
phantom_deploy_cd = 0;
phantom_deploy_cd_max = 30;
phantom_boarding_strength = 1;
phantom_replenish_cd = 0;
phantom_replenish_cd_max = 630;

energyprojector = 0;
energyprojector_cooldown = 0;
energyprojector_cooldown_max = 1800;
energyprojector_range = 1400;

plasmaturret = 0;
plasmaturret_cooldown = 0;
plasmaturret_cooldown_max = 90;
plasmaturret_range = 900;
plasmaturret_per_shot = 2;

plasmatorpedo = 0;
plasmatorpedo_cooldown = 0;
plasmatorpedo_cooldown_max = 450;
plasmatorpedo_range = 1200;
plasmatorpedo_per_shot = 3;

plt = 0;
plt_cooldown = 0;
plt_cooldown_max = 50;
plt_range = 600;
pulselaser_draw = 0;

epdraworigin_x[0] = 0;
epdraworigin_y[0] = 0;
epdrawtarget_x[0] = 0;
epdrawtarget_y[0] = 0;

pldraworigin_x[0] = 0;
pldraworigin_y[0] = 0;
pldrawtarget_x[0] = 0;
pldrawtarget_y[0] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid_l;
selfid_l = id;
var deployed_l;
deployed_l = 0;

var singleship_type = oCove_banshee_T27XMF;

with (singleship_type)
{
    if (parentid == selfid_l)
    {
        deployed_l += 1;
    }
}

var max_deploy = banshee_deploy_max;
if (status_half_fighter_deploymax != 0) {max_deploy /= 2;}

if (scramble_fighters &amp;&amp; banshee_deploy_cd &lt;= 0 &amp;&amp; banshee &gt; 0 &amp;&amp; deployed_l &lt; max_deploy)
{
    banshee_deploy_cd = banshee_deploy_cd_max;
    --banshee;
    
    var fighter = createChild(x,y,singleship_type, irandom_range(0,359));
    if (!instance_exists(fighter_targetid)) {
        with(fighter) {
            intercept(selfid_l.fighter_target_x, selfid_l.fighter_target_y);
        }
    } else if (fighter_targetid.side == side) {
        with (fighter) {
            escort(selfid_l.fighter_targetid)
        }
    } else if (fighter_targetid.side != side) {
        with (fighter) {
            attack(selfid_l.fighter_targetid)
        }
    }
}

if (banshee_deploy_cd &gt; 0) {
    --banshee_deploy_cd;
}

if (banshee_replenish_cd &gt; 0) {
    --banshee_replenish_cd;
} else if (banshee_replenish_cd &lt;= 0 &amp;&amp; banshee &lt; banshee_max) {
    banshee_replenish_cd = banshee_replenish_cd_max;
    ++banshee;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid_l;
selfid_l = id;
var deployed_l;
deployed_l = 0;

var singleship_type = oCove_seraph_T31XMF;

with (singleship_type)
{
    if (parentid == selfid_l)
    {
        deployed_l += 1;
    }
}

var max_deploy = seraph_deploy_max;
if (status_half_fighter_deploymax != 0) {max_deploy /= 2;}

if (scramble_fighters &amp;&amp; seraph_deploy_cd &lt;= 0 &amp;&amp; seraph &gt; 0 &amp;&amp; deployed_l &lt; max_deploy) 
{
    seraph_deploy_cd = seraph_deploy_cd_max;
    --seraph;
    
    var fighter = createChild(x,y,singleship_type, irandom_range(0,359));
    if (!instance_exists(fighter_targetid)) {
        with(fighter) {
            intercept(selfid_l.fighter_target_x, selfid_l.fighter_target_y);
        }
    } else if (fighter_targetid.side == side) {
        with (fighter) {
            escort(selfid_l.fighter_targetid)
        }
    } else if (fighter_targetid.side != side) {
        with (fighter) {
            attack(selfid_l.fighter_targetid)
        }
    }
}

if (seraph_deploy_cd &gt; 0) {
    --seraph_deploy_cd;
}

if (seraph_replenish_cd &gt; 0) {
    --seraph_replenish_cd;
} else if (seraph_replenish_cd &lt;= 0 &amp;&amp; seraph &lt; seraph_max) {
    seraph_replenish_cd = seraph_replenish_cd_max;
    ++seraph;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid = id;
var singleship_type = oCove_phantom_T52;

if (phantom_deploy_cd &lt;= 0 &amp;&amp; phantom &gt; 0 &amp;&amp; !ds_list_empty(transport_targetid_queue))
{
    var transport_targetid = transport_targetid_queue[| 0];
    ds_list_delete(transport_targetid_queue, 0);
    if (instance_exists(transport_targetid)) {
        var transport = createChild(x,y,singleship_type, irandom_range(0,359));
        with (transport) {
            boarding_strength = selfid.phantom_boarding_strength;
            board(transport_targetid);
        }
        phantom_deploy_cd = phantom_deploy_cd_max;
        --phantom;
    }
    
}

if (phantom_deploy_cd &gt; 0) {
    --phantom_deploy_cd;
}

if (phantom_replenish_cd &gt; 0) {
    --phantom_replenish_cd;
} else if (phantom_replenish_cd &lt;= 0 &amp;&amp; phantom &lt; phantom_max) {
    phantom_replenish_cd = phantom_replenish_cd_max;
    ++phantom;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fire_primary &amp;&amp; energyprojector_cooldown &lt;= 0 &amp;&amp; energyprojector &gt; 0)
{
    var selfid = id;
        
    energyprojector_cooldown = energyprojector_cooldown_max;
    
    if (global.sfx) {
        sound_play(energyProjectorFire);
    }
    
    for (var i = 0; i &lt; energyprojector; i++)
    {
        var fire_x = x + lengthdir_x(primary_origin_distance_offset,primary_origin_angle_offset+direction);
        var fire_y = y + lengthdir_y(primary_origin_distance_offset,primary_origin_angle_offset+direction);
        with (instance_create(fire_x,fire_y,oCove_EnergyProjector))
        {
            dir = selfid.primary_target_dir;
            side = selfid.side;
            parentid = selfid;
        }
    }
    fire_primary = false;
}

if (energyprojector_cooldown &gt; 0) {
    if (status_half_primarycharge != 0) {
        energyprojector_cooldown -= 0.5;
    } else {
        energyprojector_cooldown -= 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (fire_secondary &amp;&amp; instance_exists(targetid) &amp;&amp; plasmatorpedo_cooldown &lt;= 0)
{
    if (checkLoS(x, y, plasmatorpedo_range, point_direction(x, y, targetid.x, targetid.y), oallcapitalships) == targetid)
    {
        plasmatorpedo_cooldown = plasmatorpedo_cooldown_max;
        
        var plasmatorpedo_shots = plasmatorpedo/plasmatorpedo_per_shot;
        if (status_half_secondary != 0) {
            plasmatorpedo_shots /= 2;
        }
        repeat (plasmatorpedo_shots)
        {
            var ID = createChild(x+irandom_range(-60,60),y+irandom_range(-60,60),oCove_PlasmaTorpedo, point_direction(x, y, targetid.x, targetid.y) + irandom_range(-1,1));
            ID.targetid = targetid;
        }
    }
}

if (plasmatorpedo_cooldown &gt; 0) {
    plasmatorpedo_cooldown -= 1;    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fire_secondary &amp;&amp; instance_exists(targetid) &amp;&amp; plasmaturret_cooldown &lt;= 0)
{
    if (point_distance(x,y,targetid.x,targetid.y) &lt;= plasmaturret_range)
    {
        plasmaturret_cooldown = plasmaturret_cooldown_max;
        
        var plasmaturret_shots = plasmaturret/plasmaturret_per_shot;
        if (status_half_secondary != 0) {
            plasmaturret_shots /= 2;
        }
        repeat (plasmaturret_shots)
        {
            var ID = createChild(x+irandom_range(-45,45),y+irandom_range(-45,45),oCove_PlasmaCannon, point_direction(x, y, targetid.x, targetid.y) + irandom_range(-1,1));
            ID.targetid = targetid;
        }
    }
}

if (plasmaturret_cooldown &gt; 0) {
    plasmaturret_cooldown -= 1;    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fire_pointdef &amp;&amp; plt_cooldown &lt;= 0)
{
    var selfid_l;
    selfid_l = id;
    
    var target_count_l, targets_l;
    target_count_l = 0;
    with(odestructableweaponry)
    {
        if(side!=selfid_l.side &amp;&amp; distance_to_object(selfid_l)&lt;selfid_l.plt_range &amp;&amp; side != NEUTRAL &amp;&amp; !invulnerable &amp;&amp; !invisible) 
        {
            targets_l[target_count_l] = id;
            target_count_l+=1;
        }
    }
    with(oallsingleships)
    {
        if(side!=selfid_l.side &amp;&amp; distance_to_object(selfid_l)&lt;selfid_l.plt_range &amp;&amp; side != NEUTRAL &amp;&amp; !invulnerable &amp;&amp; !invisible)
        {
            targets_l[target_count_l] = id;
            target_count_l+=1;
        }
    }
    

    if (target_count_l &gt; 0)
    {
        plt_cooldown = plt_cooldown_max;
        
        var plt_shots = plt;
        if (status_half_pointdefense != 0) {
            plt_shots /= 2;
        }
        for (var i = 0; i &lt; plt_shots; i+=1)
        {
            firepulselaserturret(i,targets_l[i mod target_count_l]);
        }
    }
}

if (plt_cooldown &gt; 0) {
    plt_cooldown -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var oldAlpha = draw_get_alpha();
draw_set_alpha(GUI_ALPHA);

if (energyprojector &gt; 0 &amp;&amp; (selected || global.debug)) {
    draw_bar(x-sprite_width/2,
        y-(sprite_height/2)-3,
        sprite_width,
        3,
        energyprojector_cooldown_max-energyprojector_cooldown,
        energyprojector_cooldown_max,
        c_yellow,
        c_white);
}

draw_set_alpha(oldAlpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
