<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oallcapitalships</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

race = "cove";
side = 1;

banshee = 0;
banshee_max = 0;
banshee_deploy_max = 0;
banshee_deploy_cd = 0;
banshee_deploy_cd_max = 30;

seraph = 0;
seraph_max = 0;
seraph_deploy_max = 0;
seraph_deploy_cd = 0;
seraph_deploy_cd_max = 60;

phantom = 0;
phantom_max = 0;
phantom_deploy_max = 0;
phantom_deploy_cd = 0;
phantom_deploy_cd_max = 90;

energyprojector = 0;
energyprojector_cooldown = 0;
energyprojector_cooldown_max = 450;
energyprojector_range = 800;

plasmaturret = 0;
plasmaturret_cooldown = 0;
plasmaturret_cooldown_max = 75;
plasmaturret_range = 600;

plt = 0;
plt_cooldown = 0;
plt_cooldown_max = 15;
plt_range = 150;
pulselaser_draw = 0;

epdraworigin_x[0] = 0;
epdraworigin_y[0] = 0;
epdrawtarget_x[0] = 0;
epdrawtarget_y[0] = 0;

pldraworigin_x[0] = 0;
pldraworigin_y[0] = 0;
pldrawtarget_x[0] = 0;
pldrawtarget_y[0] = 0;

//energyprojector_cooldown_max *= 3;
//plasmaturret_cooldown_max *= 3;
//plt_cooldown_max *= 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid_l;
selfid_l = id;
var deployed_l;
deployed_l = 0;

with (oCove_banshee_T27XMF)
{
    if (parentid == selfid_l)
    {
        deployed_l += 1;
    }
}

if (banshee_deploy_cd &lt;= 0 &amp;&amp; banshee &gt; 0 &amp;&amp; deployed_l &lt; banshee_deploy_max &amp;&amp; instance_exists(targetid))
{
    if (targetid.side!=side)
    {
        banshee_deploy_cd = banshee_deploy_cd_max;
        banshee -= 1;
        var ID;
        ID = instance_create(x,y,oCove_banshee_T27XMF);
        ID.direction = irandom_range(0,359);
        ID.targetid = targetid;
        ID.side = side;
        ID.parentid = selfid_l;
    }
}

banshee_deploy_cd -= 1;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid_l;
selfid_l = id;
var deployed_l;
deployed_l = 0;

with (oCove_seraph_T31XMF)
{
    if (parentid == selfid_l)
    {
        deployed_l += 1;
    }
}

if (seraph_deploy_cd &lt;= 0 &amp;&amp; seraph &gt; 0 &amp;&amp; deployed_l &lt; seraph_deploy_max &amp;&amp; instance_exists(targetid)) 
{
    if (targetid.side!=side)
    {
        seraph_deploy_cd = seraph_deploy_cd_max;
        seraph -= 1;
        var ID;
        ID = instance_create(x,y,oCove_seraph_T31XMF);
        ID.direction = irandom_range(0,359);
        ID.targetid = targetid;
        ID.side = side;
        ID.parentid = selfid_l;
    }
}

seraph_deploy_cd -= 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid_l;
selfid_l = id;
var deployed_l;
deployed_l = 0;

with (oCove_phantom_T52)
{
    if (parentid == selfid_l)
    {
        deployed_l += 1;
    }
}

if (phantom_deploy_cd &lt;= 0 &amp;&amp; phantom &gt; 0 &amp;&amp; deployed_l &lt; phantom_deploy_max &amp;&amp; instance_exists(targetid))
{
    if (targetid.side!=side)
    {
        phantom_deploy_cd = phantom_deploy_cd_max;
        phantom -= 1;
        var ID;
        ID = instance_create(x,y,oCove_phantom_T52);
        ID.direction = irandom_range(0,359);
        ID.targetid = targetid;
        ID.side = side;
        ID.parentid = selfid_l;
    }
}

phantom_deploy_cd -= 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(targetid) &amp;&amp; energyprojector_cooldown &lt;= 0)
{
    if (point_distance(x,y,targetid.x,targetid.y) &lt;= energyprojector_range)
    {
        var selfid = id;
        var targetdir = point_direction(x, y, targetid.x, targetid.y);
        
        energyprojector_cooldown = energyprojector_cooldown_max;
        var i;
        for (i = 0; i &lt; energyprojector; i+=1)
        {
            with (instance_create(x,y,oCove_EnergyProjector))
            {
                target = selfid.targetid;
                x = selfid.x;
                y = selfid.y;
                dir = targetdir;
                side = selfid.side;
                parentid = selfid;
            }
        }
    }
}

energyprojector_cooldown -= 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(targetid) &amp;&amp; plasmaturret_cooldown &lt;= 0)
{
    if (point_distance(x,y,targetid.x,targetid.y) &lt;= plasmaturret_range)
    {
        plasmaturret_cooldown = plasmaturret_cooldown_max;
        repeat (plasmaturret/3)
        {
            ID = instance_create(x+irandom_range(-30,30),y+irandom_range(-30,30),oCove_PlasmaTorpedo);
            ID.side = side;
            ID.direction = point_direction(x, y, targetid.x, targetid.y) + irandom_range(-30,30);
            ID.targetid = targetid;
        }
    }
}

plasmaturret_cooldown -= 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (plt_cooldown &lt;= 0)
{
    var selfid_l;
    selfid_l = id;
    
    var target_count_l, targets_l;
    target_count_l = 0;
    with(odestructableweaponry)
    {
        if(side!=selfid_l.side &amp;&amp; distance_to_object(selfid_l)&lt;selfid_l.plt_range) 
        {
            targets_l[target_count_l] = id;
            target_count_l+=1;
        }
    }
    with(oallsingleships)
    {
        if(side!=selfid_l.side &amp;&amp; distance_to_object(selfid_l)&lt;selfid_l.plt_range)
        {
            targets_l[target_count_l] = id;
            target_count_l+=1;
        }
    }
    

    if (target_count_l &gt; 0)
    {
        plt_cooldown = plt_cooldown_max;
        var i;
        for (i = 0; i &lt; plt; i+=1)
        {
            firepulselaserturret(i,targets_l[i mod target_count_l]);
        }
    }
}
plt_cooldown -= 1;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
