<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oallships</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

singleship_damage = 1;
singleship_rate = 1;
singleship_speed = 1;
singleship_range = 1;

sight_range = 600;
refuel_range = 9001;

findtarget_delay = 30;
alarm[0] = findtarget_delay;

parentid = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid_l;
selfid_l = id;

var closest_l;
var closestid_l;

//range to engage enemy units
closest_l = sight_range;
closestid_l = noone;

//Find nearest singleship within range
with (oallsingleships)
{
    if (side != selfid_l.side)
    {
        if (distance_to_object(selfid_l) &lt; closest_l)
        {
            closest_l = distance_to_object(selfid_l);
            closestid_l = id;
        }
    }
}


//Find nearest capital ships if no target already
if (!instance_exists(closestid_l))
{
    with (oallcapitalships)
    {
        if (side != selfid_l.side)
        {
            if (distance_to_object(selfid_l) &lt; closest_l)
            {
                closest_l = distance_to_object(selfid_l);
                closestid_l = id;
            }
        }
    }
}

//Find nearest allied capital ship if no target
if (!instance_exists(closestid_l))
{
    if (instance_exists(parentid)) {closestid_l = parentid;} 
    else 
    {
        with (oallcapitalships)
        {
            if (side == selfid_l.side)
            {
                closest_l = selfid_l.refuel_range;
                if (distance_to_object(selfid_l) &lt; closest_l)
                {
                    closest_l = distance_to_object(selfid_l);
                    closestid_l = id;
                }
            }
        }
    }
}

targetid = closestid_l;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>findtarget_delay</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
