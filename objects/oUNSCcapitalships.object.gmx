<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oallcapitalships</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

hanger = 1;

broadsword = 0;
broadsword_max = 0;
broadsword_deploy_max = 0;
broadsword_deploy_cd = 0;
broadsword_deploy_cd_max = 0;

longsword = 0;
longsword_max = 0;
longsword_deploy_max = 0;
longsword_deploy_cd = 0;
longsword_deploy_cd_max = 0;

pelican = 0;
pelican_max = 0;
pelican_deploy_max = 0;
pelican_deploy_cd = 0;
pelican_deploy_cd_max = 0;

race = "unsc";
side = 0;

//INITIALIZATION of UNSC ship vars
mac = 0;
mac_cooldown = 0;
mac_cooldown_max = 1800;
mac_range = 1000;

archerpod = 0;
archerpod_cooldown = 0;
archerpod_cooldown_max = 150;
archerpod_range = 900;

//Fire shot -&gt; burst delay -&gt; fire shot -&gt; burst delay -&gt; ... -&gt; cooldown
pdt = 0;
pdt_burst_delay = 0;
pdt_burst_delay_max = 30;
pdt_burst_count = 0;
pdt_burst_count_max = 4;
pdt_cooldown = 0;
pdt_cooldown_max = 40;
pdt_range = 250;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid_l;
selfid_l = id;
var deployed_l;
deployed_l = 0;

var singleship_type = oUNSC_broadsword_F41;

with (singleship_type)
{
    if (parentid == selfid_l)
    {
        deployed_l += 1;
    }
}

var max_deploy = broadsword_deploy_max;
if (status_half_fighter_deploymax != 0) {max_deploy /= 2;}

if (scramble_fighters &amp;&amp; broadsword_deploy_cd &lt;= 0 &amp;&amp; broadsword &gt; 0 &amp;&amp; deployed_l &lt; max_deploy)
{
    broadsword_deploy_cd = broadsword_deploy_cd_max;
    broadsword -= 1;
    
    var fighter = createChild(x,y,singleship_type, irandom_range(0,359));
    if (!instance_exists(fighter_targetid)) {
        with(fighter) {
            intercept(selfid_l.fighter_target_x, selfid_l.fighter_target_y);
        }
    } else if (fighter_targetid.side == side) {
        with (fighter) {
            escort(selfid_l.fighter_targetid)
        }
    } else if (fighter_targetid.side != side) {
        with (fighter) {
            attack(selfid_l.fighter_targetid)
        }
    }
}

if (broadsword_deploy_cd &gt; 0) {
    broadsword_deploy_cd -= 1;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var selfid_l;
selfid_l = id;
var deployed_l;
deployed_l = 0;

var singleship_type = oUNSC_longsword_GATL1;

with (singleship_type)
{
    if (parentid == selfid_l)
    {
        deployed_l += 1;
    }
}

var max_deploy = longsword_deploy_max;
if (status_half_fighter_deploymax != 0) {max_deploy /= 2;}

if (scramble_fighters &amp;&amp; longsword_deploy_cd &lt;= 0 &amp;&amp; longsword &gt; 0 &amp;&amp; deployed_l &lt; max_deploy)
{
    longsword_deploy_cd = longsword_deploy_cd_max;
    longsword -= 1;
    
    var fighter = createChild(x,y,singleship_type, irandom_range(0,359));
    if (!instance_exists(fighter_targetid)) {
        with(fighter) {
            intercept(selfid_l.fighter_target_x, selfid_l.fighter_target_y);
        }
    } else if (fighter_targetid.side == side) {
        with (fighter) {
            escort(selfid_l.fighter_targetid)
        }
    } else if (fighter_targetid.side != side) {
        with (fighter) {
            attack(selfid_l.fighter_targetid)
        }
    }
}

if (longsword_deploy_cd &gt; 0) {
    longsword_deploy_cd -= 1;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var singleship_type = oUNSC_pelican;

if (pelican_deploy_cd &lt;= 0 &amp;&amp; pelican &gt; 0 &amp;&amp; !ds_list_empty(transport_targetid_queue))
{
    var transport_targetid = transport_targetid_queue[| 0];
    ds_list_delete(transport_targetid_queue, 0);
    if (instance_exists(transport_targetid)) {
        var transport = createChild(x,y,singleship_type, irandom_range(0,359));
        with (transport) {
            board(transport_targetid);
        }
        pelican_deploy_cd = pelican_deploy_cd_max;
        pelican -= 1;   
    }
    
}

if (pelican_deploy_cd &gt; 0) {
    pelican_deploy_cd -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fire_primary &amp;&amp; mac_cooldown &lt;= 0 &amp;&amp; mac &gt; 0)
{
    turnTowards(primary_target_dir);
    if (withinDegrees(direction, primary_target_dir, 2))
    {
        var selfid = id;
        
        mac_cooldown = mac_cooldown_max;
        sound_play(macFire);
        for (var i = 0; i &lt; mac; i++)
        {
            var fire_x = x + lengthdir_x(primary_origin_distance_offset,primary_origin_angle_offset+direction);
            var fire_y = y + lengthdir_y(primary_origin_distance_offset,primary_origin_angle_offset+direction);
            with (instance_create(fire_x,fire_y,oUNSC_MAC))
            {
                dir = selfid.primary_target_dir;
                side = selfid.side;
                parentid = selfid;
            }
        }
        fire_primary = false;
    }
}

if (mac_cooldown &gt; 0) {
    if (status_half_primarycharge != 0) {
        mac_cooldown -= 0.5;
    } else {
        mac_cooldown -= 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fire_secondary &amp;&amp; instance_exists(targetid) &amp;&amp; archerpod_cooldown &lt;= 0)
{
    if (point_distance(x, y, targetid.x, targetid.y) &lt;= archerpod_range)
    {
        var targetdir;
        targetdir = point_direction(x,y,targetid.x,targetid.y);
        archerpod_cooldown = archerpod_cooldown_max;
        
        var missiles_fired = archerpod/4;
        if (status_half_secondary != 0) {
            missiles_fired /= 2;
        }
        repeat (missiles_fired)
        {
            ID = instance_create(x+irandom_range(-30,30),y+irandom_range(-30,30),oUNSC_ArcherMissile);
            ID.side = side;
            ID.direction = targetdir + irandom_range(-50,50);
            ID.targetid = targetid;
        }
    }
}

if (archerpod_cooldown &gt; 0) {
    archerpod_cooldown -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fire_pointdef &amp;&amp; pdt_burst_delay &lt;= 0 &amp;&amp; pdt_burst_count &gt; 0)
{
    var selfid_l;
    selfid_l = id;

    var target_count_l, targets_l;
    target_count_l = 0;
    with(odestructableweaponry)
    {
        if(side!=selfid_l.side &amp;&amp; distance_to_object(selfid_l)&lt;selfid_l.pdt_range &amp;&amp; side != NEUTRAL &amp;&amp; !invulnerable) 
        {
            targets_l[target_count_l] = id;
            target_count_l+=1;
        }
    }
    with(oallsingleships)
    {
        if(side!=selfid_l.side &amp;&amp; distance_to_object(selfid_l)&lt;selfid_l.pdt_range &amp;&amp; side != NEUTRAL &amp;&amp; !invulnerable)
        {
            targets_l[target_count_l] = id;
            target_count_l+=1;
        }
    }


    if (target_count_l &gt; 0)
    {
        pdt_burst_delay = pdt_burst_delay_max;
        pdt_burst_count -= 1;
        
        var pdt_shots = pdt;
        if (status_half_pointdefense != 0) {
            pdt_shots /= 2;
        }
        for (var i = 0; i &lt; pdt_shots; i++)
        {
            firepointdefenseturret(i,targets_l[i mod target_count_l]);
        }
    }
}

if (pdt_burst_count == 0) {
    if (pdt_cooldown &lt;= 0) {
        pdt_burst_count = pdt_burst_count_max;
        pdt_cooldown = pdt_cooldown_max;
    } else if (pdt_cooldown &gt; 0) {
        pdt_cooldown -= 1;
    }
} else if (pdt_burst_delay &gt; 0) {
    pdt_burst_delay -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var oldAlpha = draw_get_alpha();
draw_set_alpha(GUI_ALPHA);

if (mac &gt; 0 &amp;&amp; (selected || global.debug)) {
    draw_bar(x-sprite_width/2,
        y-(sprite_height/2)-3,
        sprite_width,
        3,
        mac_cooldown_max-mac_cooldown,
        mac_cooldown_max,
        c_yellow,
        c_white);
}
        
draw_set_alpha(oldAlpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
